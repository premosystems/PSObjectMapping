{"name":"PSObjectMapping","tagline":"","body":"PSObjectMapping\r\n===============\r\n\r\nOverview\r\n========\r\n========\r\n\r\nPSObjectMapping maps NSDictionary and NSArray collections to CoreData NSManagedObjects.\r\n\r\nThe solution consists of a category on NSManagedObject and a protocol describing a PSMappableObject.\r\n\r\nThe development of PSObjectMapping came out of a personal need, and although it is being used in production, it is still very much a work in progress.\r\n\r\n## Example Setup\r\n![XCode Data Model Primary Key Setup](https://raw.github.com/premosystems/PSObjectMapping/gh-pages/xcdatamodel-primary-key-screenshot.png)\r\n\r\nExample Usage\r\n=============\r\n=============\r\n\r\nTo use PSObjectMapping there exists a class method applied to all PSMappableObjects:\r\n\r\n```objective-c\r\n+ (NSArray*) mapWithCollection:(id)arrayOrDictionary rootObjectKey:(NSString*)rootObjectKey customObjectMappingBlock:(void (^)(NSDictionary *keyedValues, id object))customObjectMappingBlock mapRelationships:(BOOL)mapRelationships;\r\n```\r\n\r\nPass the NSArray or NSDictionary containing keyed values to this method, and an array of NSManagedObjectIDs is returned for the objects that were mapped.\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}